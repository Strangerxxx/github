on: release

name: Upload release assets
jobs:
  uploadReleaseAssets:
    name: Upload release assets
    runs-on: ubuntu-latest
    steps:

    - name: set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Build artifacts
      env:
        GO_BUILD_OPTIONS: "-a -installsuffix cgo"
        GO_BUILD_LDFLAGS: "-s -w"
        CGO_ENABLED: 0
        GOARCH: amd64
        TAG_NAME: ${{ github.event.release.tag_name }}
      run: |
        BUILD_DATE=$(date "+%Y-%m-%d")
        BUILD_COMMIT_HASH=$(git rev-parse --short HEAD 2> /dev/null)
        GO_BUILD_LDFLAGS="${GO_BUILD_LDFLAGS}
          -X github.com/inextensodigital/github/cmd.version=${TAG_NAME}
          -X github.com/inextensodigital/github/cmd.buildDate=${BUILD_DATE}
          -X github.com/inextensodigital/github/cmd.commitHash=${BUILD_COMMIT_HASH}
        "

        GOOS=linux
        NAME=github-${GOOS}-${GOARCH}
        go build ${GO_BUILD_OPTIONS} -ldflags "${GO_BUILD_LDFLAGS}" -o release/${NAME}
        shasum -a 256 release/"${NAME}" > "release/${NAME}.sha256"

        GOOS=darwin
        NAME=github-${GOOS}-${GOARCH}
        CGO_ENABLED=1 go build ${GO_BUILD_OPTIONS} -ldflags "${GO_BUILD_LDFLAGS}" -o release/${NAME}
        shasum -a 256 release/"${NAME}" > "release/${NAME}.sha256"

        GOOS=windows
        NAME=github-${GOOS}-${GOARCH}.exe
        go build ${GO_BUILD_OPTIONS} -ldflags "${GO_BUILD_LDFLAGS}" -o release/${NAME}
        shasum -a 256 release/"${NAME}" > "release/${NAME}.sha256"

        ./release/github-linux-amd64 version

    - name: Install hub cli
      run: |
        curl -s https://api.github.com/repos/github/hub/releases/latest | 
        jq -r '.assets[] | select(.name | contains("linux-amd64")) | .browser_download_url' | 
        wget -qi - -O - | sudo tar xzpf - -C / --strip-components=1

    - name: Upload artifacts
      env:
        TAG_NAME: ${{ github.event.release.tag_name }}
      run: |
        hub release edit 
          -m ""
          -a ./release/github-linux-amd64
          -a ./release/github-linux-amd64.sha256
          -a ./release/github-darwin-amd64
          -a ./release/github-darwin-amd64.sha256
          -a ./release/github-windows-amd64.exe
          -a ./release/github-windows-amd64.exe.sha256
          ${TAG_NAME}
