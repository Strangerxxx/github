on: release

name: Upload release assets when release is published
jobs:
  onReleasePublished:
    name: On release published
    runs-on: ubuntu-latest

    steps:
      - name: Is release published?
        if: github.event.action != 'published'
        run: exit 78

  uploadReleaseAssets:
    name: Upload release assets
    runs-on: ubuntu-latest
    needs: onReleasePublished

    steps:
    - name: set up Go 1.12
      id: go
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Build artifacts
      env:
        GO_BUILD_OPTIONS: "-a -installsuffix cgo"
        GO_BUILD_LDFLAGS: "-s -w"
        GOARCH: amd64
        TAG_NAME: ${{ github.event.release.tag_name }}
      run: |
        export BUILD_DATE=$(date "+%Y-%m-%d")
        export BUILD_COMMIT_HASH=$(git rev-parse --short HEAD 2> /dev/null)
        export GO_BUILD_LDFLAGS="${GO_BUILD_LDFLAGS}
          -X github.com/inextensodigital/github/cmd.version=${TAG_NAME}
          -X github.com/inextensodigital/github/cmd.buildDate=${BUILD_DATE}
          -X github.com/inextensodigital/github/cmd.commitHash=${BUILD_COMMIT_HASH}
        "

        export GOOS=darwin
        export NAME=github-${GOOS}-${GOARCH}
        printf "Building ${NAME}..."
        go build ${GO_BUILD_OPTIONS} -ldflags "${GO_BUILD_LDFLAGS}" -o release/${NAME}
        shasum -a 256 release/${NAME} > "release/${NAME}.sha256"

        export GOOS=windows
        export NAME=github-${GOOS}-${GOARCH}.exe
        printf "Building ${NAME}..."
        go build ${GO_BUILD_OPTIONS} -ldflags "${GO_BUILD_LDFLAGS}" -o release/${NAME}
        shasum -a 256 release/${NAME} > "release/${NAME}.sha256"

        export GOOS=darwin
        export NAME=github-${GOOS}-${GOARCH}
        printf "Building ${NAME}..."
        go build ${GO_BUILD_OPTIONS} -ldflags "${GO_BUILD_LDFLAGS}" -o release/${NAME}
        shasum -a 256 release/${NAME} > "release/${NAME}.sha256"

        file ./release/*
        ./release/github-linux-amd64 version

    - name: Install hub cli
      run: |
        curl -s https://api.github.com/repos/github/hub/releases/latest | 
        jq -r '.assets[] | select(.name | contains("linux-amd64")) | .browser_download_url' | 
        wget -qi - -O - | sudo tar xzpf - -C / --strip-components=1

    - name: Upload artifacts
      env:
        TAG_NAME: ${{ github.event.release.tag_name }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # https://help.github.com/en/articles/virtual-environments-for-github-actions#token-permissions
        echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
        GITHUB_USER=${GITHUB_ACTOR}; hub release edit \
          "${TAG_NAME}" \
          -m "" \
          -a ./release/github-darwin-amd64 \
          -a ./release/github-darwin-amd64.sha256 \
          -a ./release/github-linux-amd64 \
          -a ./release/github-linux-amd64.sha256 \
          -a ./release/github-windows-amd64.exe \
          -a ./release/github-windows-amd64.exe.sha256
